name: (Aux) Deploy solution

on:
  workflow_call:
    inputs:
      config_file: # the variable you can use in place of a matrix
        required: true
        type: string

env:
  # Use the same ssh-agent socket value across all jobs
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  
jobs:
  deploy_solution:
    name: Deploy the solution to the album catalog
    runs-on: ubuntu-latest # [self-hosted, dl4miceverywhere-builder]

    permissions:
      contents: write

    # Conda needs to use login mode
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Clone actual DL4MicEverywhere-album repository
        uses: actions/checkout@v4
      - name: Set up album's Miniconda environment
        uses: conda-incubator/setup-miniconda@v3
        with:          
          miniforge-version: latest
          use-mamba: true
          auto-update-conda: false
          auto-activate-base: false 
          python-version: 3.12 # Python version needs to be between 3.7 and 3.12
          activate-environment: album
          environment-file: .tools/actions_utils/album_enviornment.yml 
          condarc-file: .tools/actions_utils/album_condarc.yml # Optional runtime configuration
          run-post: true # Run post cleanup step
      - name: Download modified solution from previous step
        uses: actions/download-artifact@v4
        with:
          name: 'success_${{ inputs.config_file }}'
          path: ../temp
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: Setup git config
        run: |
          git config --global user.name ${{ secrets.USERNAME }}
          git config --global user.email ${{ secrets.EMAIL }}
      - name: Setup SSH with a passphrase
        env:
            SSH_PASSPHRASE: ${{secrets.SSH_PASSPHRASE}}
            SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        run: |
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            echo "echo $SSH_PASSPHRASE" > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null
      - name: Add catalog
        run: |
          album add-catalog git@github.com:HenriquesLab/DL4MicEverywhere-album.git

      - name: Execute and retry album deploy
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 3
          max_attempts: 3
          command: album deploy '../temp/solution.py' DL4MicEverywhere_album 
      - name: Post - Deploy certain solution
        run: album remove-catalog DL4MicEverywhere_album